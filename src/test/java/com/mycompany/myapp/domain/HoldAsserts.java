package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HoldAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoldAllPropertiesEquals(Hold expected, Hold actual) {
        assertHoldAutoGeneratedPropertiesEquals(expected, actual);
        assertHoldAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoldAllUpdatablePropertiesEquals(Hold expected, Hold actual) {
        assertHoldUpdatableFieldsEquals(expected, actual);
        assertHoldUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoldAutoGeneratedPropertiesEquals(Hold expected, Hold actual) {
        assertThat(expected)
            .as("Verify Hold auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoldUpdatableFieldsEquals(Hold expected, Hold actual) {
        assertThat(expected)
            .as("Verify Hold relevant properties")
            .satisfies(e -> assertThat(e.getStartTime()).as("check startTime").isEqualTo(actual.getStartTime()))
            .satisfies(e -> assertThat(e.getEndTime()).as("check endTime").isEqualTo(actual.getEndTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoldUpdatableRelationshipsEquals(Hold expected, Hold actual) {
        assertThat(expected)
            .as("Verify Hold relationships")
            .satisfies(e -> assertThat(e.getBookCopy()).as("check bookCopy").isEqualTo(actual.getBookCopy()))
            .satisfies(e -> assertThat(e.getPatronAccount()).as("check patronAccount").isEqualTo(actual.getPatronAccount()));
    }
}
